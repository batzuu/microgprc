# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import main_pb2 as main__pb2


class MainServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ExecFunction = channel.unary_unary(
                '/packageandfunction.MainService/ExecFunction',
                request_serializer=main__pb2.functionData.SerializeToString,
                response_deserializer=main__pb2.functionResult.FromString,
                )
        self.InstallPackage = channel.unary_unary(
                '/packageandfunction.MainService/InstallPackage',
                request_serializer=main__pb2.packageData.SerializeToString,
                response_deserializer=main__pb2.packageStatus.FromString,
                )


class MainServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ExecFunction(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InstallPackage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MainServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ExecFunction': grpc.unary_unary_rpc_method_handler(
                    servicer.ExecFunction,
                    request_deserializer=main__pb2.functionData.FromString,
                    response_serializer=main__pb2.functionResult.SerializeToString,
            ),
            'InstallPackage': grpc.unary_unary_rpc_method_handler(
                    servicer.InstallPackage,
                    request_deserializer=main__pb2.packageData.FromString,
                    response_serializer=main__pb2.packageStatus.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'packageandfunction.MainService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class MainService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ExecFunction(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packageandfunction.MainService/ExecFunction',
            main__pb2.functionData.SerializeToString,
            main__pb2.functionResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def InstallPackage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/packageandfunction.MainService/InstallPackage',
            main__pb2.packageData.SerializeToString,
            main__pb2.packageStatus.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
